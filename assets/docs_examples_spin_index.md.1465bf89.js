import{_ as t,c as e,o as l,e as d}from"./app.85edad19.js";const g=JSON.parse('{"title":"加载中 Spin","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":2,"title":"不同尺寸","slug":"不同尺寸","link":"#不同尺寸","children":[]},{"level":2,"title":"点类型指示符","slug":"点类型指示符","link":"#点类型指示符","children":[]},{"level":2,"title":"添加描述文案","slug":"添加描述文案","link":"#添加描述文案","children":[]},{"level":2,"title":"容器中","slug":"容器中","link":"#容器中","children":[]},{"level":2,"title":"自定义图标","slug":"自定义图标","link":"#自定义图标","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"<spin> Props","slug":"spin-props","link":"#spin-props","children":[]},{"level":3,"title":"<spin> Slots","slug":"spin-slots","link":"#spin-slots","children":[]}]}],"relativePath":"docs/examples/spin/index.md"}'),i={name:"docs/examples/spin/index.md"},a=d('<h1 id="加载中-spin" tabindex="-1">加载中 Spin <a class="header-anchor" href="#加载中-spin" aria-hidden="true">#</a></h1><p>用于页面和区块的加载中状态 - 页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-hidden="true">#</a></h2><p>用于展示加载中的状态。</p><p>:::code spin/spin1.vue :::</p><h2 id="不同尺寸" tabindex="-1">不同尺寸 <a class="header-anchor" href="#不同尺寸" aria-hidden="true">#</a></h2><p>设置 <code>size</code> 可以得到不同尺寸的加载图标。</p><p>:::code spin/spin2.vue :::</p><h2 id="点类型指示符" tabindex="-1">点类型指示符 <a class="header-anchor" href="#点类型指示符" aria-hidden="true">#</a></h2><p>通过 <code>dot</code> 属性，可以展示点类型的指示符。</p><p>:::code spin/spin3.vue :::</p><h2 id="添加描述文案" tabindex="-1">添加描述文案 <a class="header-anchor" href="#添加描述文案" aria-hidden="true">#</a></h2><p>通过 tip 属性添加描述文案。</p><p>:::code spin/spin4.vue :::</p><h2 id="容器中" tabindex="-1">容器中 <a class="header-anchor" href="#容器中" aria-hidden="true">#</a></h2><p>可以给任意内容添加加载中指示符。</p><p>:::code spin/spin5.vue :::</p><h2 id="自定义图标" tabindex="-1">自定义图标 <a class="header-anchor" href="#自定义图标" aria-hidden="true">#</a></h2><p>通过 #icon 插槽可以自定义图标。</p><p>:::code spin/spin6.vue :::</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="spin-props" tabindex="-1"><code>&lt;spin&gt;</code> Props <a class="header-anchor" href="#spin-props" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">描述</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">size</td><td style="text-align:left;">尺寸</td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>20</code></td></tr><tr><td style="text-align:left;">loading</td><td style="text-align:left;">是否为加载中状态（仅在容器模式下生效）</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;">dot</td><td style="text-align:left;">是否使用点类型的动画</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;">tip</td><td style="text-align:left;">提示内容</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>-</code></td></tr></tbody></table><h3 id="spin-slots" tabindex="-1"><code>&lt;spin&gt;</code> Slots <a class="header-anchor" href="#spin-slots" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:left;">插槽名</th><th style="text-align:left;">描述</th><th style="text-align:left;">参数</th></tr></thead><tbody><tr><td style="text-align:left;">default</td><td style="text-align:left;">放置需要展示加载中的容器</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">icon</td><td style="text-align:left;">自定义图标（自动旋转）</td><td style="text-align:left;">-</td></tr></tbody></table>',25),n=[a];function s(r,h,o,p,c,f){return l(),e("div",null,n)}const y=t(i,[["render",s]]);export{g as __pageData,y as default};
